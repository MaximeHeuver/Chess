@page "/"
@using Chess.Engine.Logic

@if(Game != null)
{
    <div class="board">
        @foreach(var row in Enumerable.Range(0, 8))
        {
            <div class="row">
                @foreach (var squareInRow in Enumerable.Range(0, 8))
                {
                    <div @onclick="() => OnSquareClick((56 - (row * 8)) + squareInRow)" class="@((row + squareInRow) % 2 == 0 ? "square even-square" : "square odd-square")">
                        @if (HighlightIndexes.Contains(Game.Board[(56 - (row * 8)) + squareInRow].BoardIndex))
                        {
                            <div class="square-highlight"/>
                        }

                        @if (Game.Board[(56 - (row * 8)) + squareInRow].Piece != null)
                        {
                            <img class="piece-image" src="chess-piece-assets/@(Game.Board[(56 - (row * 8)) + squareInRow].Piece?.Side.ToString()[0] + "-" + Game.Board[(56 - (row * 8)) + squareInRow].Piece?.NotationCharacter).svg" />
                        }
                    </div>
                }
            </div>
        }
    </div>
    
    <p>Last error message: @LastErrorMessage</p>

    <p>Last clicked piece square: @(LastSelectedPieceIndex == -1 ? "" : Game!.Board[LastSelectedPieceIndex].SquareNotation)</p>

    <p>FEN: @FenConverter.GameToFenNotation(Game)</p>

    <p>Check? @GameStateChecker.IsKingInCheck(Game)</p>

    <p>Checkmate? @GameStateChecker.IsKingCheckmate(Game)</p>

    <p>Stalemate? @GameStateChecker.IsStaleMate(Game)</p>
}